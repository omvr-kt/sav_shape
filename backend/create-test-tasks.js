#!/usr/bin/env node

const { initDatabase } = require('./src/utils/database');
const Task = require('./src/models/Task');

async function createTestTasks() {
  console.log('üß™ Cr√©ation de t√¢ches de test...');
  
  try {
    await initDatabase();
    const { db } = require('./src/utils/database');
    
    // R√©cup√©rer l'ID du d√©veloppeur et des projets assign√©s
    const dev = await db.get('SELECT id FROM users WHERE email = ?', ['dev@agency.local']);
    if (!dev) {
      console.log('‚ùå Utilisateur d√©veloppeur non trouv√©');
      return;
    }
    
    const projects = await db.all(`
      SELECT p.id, p.name 
      FROM projects p
      INNER JOIN developer_projects dp ON p.id = dp.project_id
      WHERE dp.user_id = ?
    `, [dev.id]);
    
    if (projects.length === 0) {
      console.log('‚ùå Aucun projet assign√© au d√©veloppeur');
      return;
    }
    
    const project = projects[0]; // Prendre le premier projet
    console.log(`‚úÖ Cr√©ation de t√¢ches pour le projet: ${project.name}`);
    
    // T√¢ches de test
    const testTasks = [
      {
        title: 'Corriger le bug d\'authentification',
        description: 'Le token JWT expire trop rapidement et cause des d√©connexions inattendues',
        urgency: 'urgent',
        status: 'todo_back'
      },
      {
        title: 'Optimiser les requ√™tes de la page dashboard',
        description: 'Les requ√™tes SQL sont lentes et causent des timeouts',
        urgency: 'high',
        status: 'todo_back'
      },
      {
        title: 'Impl√©menter le syst√®me de notifications',
        description: 'Ajouter les notifications push pour les nouvelles t√¢ches',
        urgency: 'medium',
        status: 'todo_front'
      },
      {
        title: 'Refactoriser le composant Kanban',
        description: 'Le code est devenu difficile √† maintenir, besoin de refactoring',
        urgency: 'medium',
        status: 'in_progress'
      },
      {
        title: 'Ajouter les tests unitaires pour l\'API auth',
        description: 'Am√©liorer la couverture de tests pour l\'authentification',
        urgency: 'low',
        status: 'ready_for_review'
      },
      {
        title: 'Mise √† jour de la documentation technique',
        description: 'Mettre √† jour la documentation suite aux derni√®res modifications',
        urgency: 'low',
        status: 'done'
      }
    ];
    
    for (const taskData of testTasks) {
      const task = await Task.create({
        project_id: project.id,
        title: taskData.title,
        description: taskData.description,
        urgency: taskData.urgency,
        status: taskData.status,
        created_by: dev.id
      });
      
      console.log(`‚úÖ T√¢che cr√©√©e: ${task.title} (${task.status})`);
    }
    
    console.log('üéâ T√¢ches de test cr√©√©es avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation des t√¢ches:', error);
  }
}

createTestTasks();